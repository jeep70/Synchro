jobs:
- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - checkout: self
    lfs: true

  - powershell: |
      cd ~
      $ProgressPreference = 'SilentlyContinue'
      Invoke-WebRequest https://dl.dropboxusercontent.com/s/8ur5xp7cbfjp86f/msvc2017_64.7z -OutFile qt.7z
      & "$env:ProgramFiles\7-Zip\7z.exe" x qt.7z -y -oQt
    displayName: 'Download Qt'

  - powershell: |
      $ProgressPreference = 'SilentlyContinue'
      Invoke-WebRequest https://sourceforge.net/projects/mpv-player-windows/files/libmpv/mpv-dev-x86_64-20200705-git-8fbc4b1.7z/download -OutFile mpv-dev.7z -UserAgent [Microsoft.PowerShell.Commands.PSUserAgent]::FireFox
      
      & "$env:ProgramFiles\7-Zip\7z.exe" x mpv-dev.7z -y -ompv
    displayName: 'Download mpv dev archive'

  - script: |
      call "%programfiles(x86)%\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      cd mpv\
      lib /def:mpv.def /name:mpv-1.dll /out:mpv.lib /MACHINE:X64
      cd include
      mkdir mpv
      move * mpv\
    displayName: 'Generate mpv libraries'

  - script: |
      rustup toolchain install stable
      git clone https://github.com/jurplel/libsynchro.git
      cd libsynchro\capi
      cargo +stable build --release
    displayName: 'Clone and build libsynchro'

  - script: |
      call "%programfiles(x86)%\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      set Qt5_DIR=%userprofile%\Qt\msvc2017_64
      cmake --config Release . -A x64 -DNIGHTLY=ON -DBUILD_NUMBER=$(Build.BuildId)
      msbuild Synchro.sln /p:Configuration=Release /m
    displayName: 'Build Synchro'
    
  - script: |
      %userprofile%\Qt\msvc2017_64\bin\windeployqt.exe Release --no-compiler-runtime --qmldir %userprofile%\Qt\msvc2017_64\qml
      (robocopy %userprofile%\Qt\msvc2017_64\qml\Qt\labs\platform Release\Qt\labs\platform /E) ^& IF %ERRORLEVEL% LSS 8 SET ERRORLEVEL = 0
      (robocopy mpv\ Release\ mpv-1.dll) ^& IF %ERRORLEVEL% LSS 8 SET ERRORLEVEL = 0
      (robocopy libsynchro\capi\target\release\ Release\ synchro.dll) ^& IF %ERRORLEVEL% LSS 8 SET ERRORLEVEL = 0
    displayName: 'Deploy Synchro'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: 'Release'
      artifactName: 'Synchro-Nightly-win64-b$(Build.BuildId)'
    displayName: 'Publish .exe with libraries as build artifact'

- job: macOS
  pool:
    vmImage: 'macOS-10.15'
  steps:
  - checkout: self
    lfs: true

  - script: brew install qt pkg-config mpv
    displayName: 'Install Homebrew packages'

  - script: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    displayName: 'Install Rust'

  - script: |
      git clone https://github.com/jurplel/libsynchro.git
      cd libsynchro/capi
      cargo build --release
    displayName: 'Clone and build libsynchro'

  - script: |
      export Qt5_DIR=$(brew --prefix qt)/lib/cmake/Qt5
      cmake --config Release . -DNIGHTLY=ON -DBUILD_NUMBER=$(Build.BuildId)
      make
      mkdir bin
      cp -r Synchro.app bin/
      $(brew --prefix qt)/bin/macdeployqt bin/Synchro.app -qmldir=src/qml/
    displayName: 'Build Synchro'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: 'bin'
      artifactName: 'Synchro-Nightly-macOS-b$(Build.BuildId)'
    displayName: 'Publish .app as build artifact'
